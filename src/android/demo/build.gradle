// Top-level build file where you can add configuration options common to all sub-projects/modules.

//
//plugins {
//    id 'com.android.application' version '7.4.2' apply false
//    id 'com.android.library' version '7.4.2' apply false
//    id 'org.jetbrains.kotlin.android' version '1.7.20' apply false
//    id 'com.cloudcare.ft.mobile.sdk.tracker.plugin' version '1.2.0-beta03' apply false
//}

buildscript {
    ext.kotlin_version = '1.8.20'
    repositories {
        google()
        //添加FT SDK的远程仓库地址
        mavenCentral()
        maven {
            url 'https://mvnrepo.jiagouyun.com/repository/maven-releases'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.1.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.cloudcare.ft.mobile.sdk.tracker.plugin:ft-plugin:1.2.2-alpha01'
//        classpath files('../ft-plugin/build/libs/ft-plugin-1.2.1-beta01.jar')
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }

    Properties properties = new Properties()
    def localPropertiesPath = 'local.properties'
    if (project.rootProject.file(localPropertiesPath).exists()) {
        properties.load(project.rootProject.file(localPropertiesPath).newDataInputStream())
    }

    def appIdString = properties.getProperty("RUM_APP_ID")
    def demoAPIURL = properties.getProperty("DEMO_API_URL")
    def datakitRUMUrl = properties.getProperty("ACCESS_SERVER_URL")
    def datakitDCAUrl = properties.getProperty("SOURCE_MAP_URL")

    ext.ft_env = [
            'rumAppid'  : appIdString,
            'datakitRUMUrl': datakitRUMUrl,
            'datakitDCAUrl': datakitDCAUrl,
            'demoAPIURL': demoAPIURL,
            'prodTestEnv'  : 'gray',
            'prodPublishEnv'  : 'prod'
    ]
}

allprojects {
    repositories {
        google()
        //添加FT SDK的远程仓库地址
        mavenCentral()
        maven {
            url 'https://mvnrepo.jiagouyun.com/repository/maven-releases'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
